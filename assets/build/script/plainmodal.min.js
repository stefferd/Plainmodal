/*! plainmodal - v0.0.1 - 2014-10-20 */
"use strict";

!function(a) {
    var b = {};
    b.version = "0.0.1", b.addClass = function(a, b) {
        -1 === a.className.indexOf(b) && (a.className.length > 0 ? a.className += " " + b : a.className = b);
    }, b.removeClass = function(a, b) {
        var c = a.className, d = c.split(" "), e = -1, f = 0;
        if (c.indexOf(b) > -1) {
            for (f; f < d.length; f += 1) if (d[f] === b) {
                e = f;
                break;
            }
            e > -1 && d.splice(e, 1), c = d.join(" ");
        }
        a.className = c;
    }, b.hasClass = function(a, b) {
        return a.className.indexOf(b) > -1;
    }, b.each = function(a, b) {
        return [].map.call(a, b);
    }, b.search = function(a) {
        var b, c = "", d = null;
        return a ? ("string" == typeof a && (b = a.charAt(0), b.indexOf("#") > -1 ? (c = a.substr(1, a.length), 
        d = document.getElementById(c)) : b.indexOf(".") > -1 ? (c = a.substr(1, a.length), 
        d = document.getElementsByClassName(c)) : (c = a, d = document.getElementsByTagName(c))), 
        "number" == typeof d.length && (d = 1 === d.length ? d[0] : [].slice.call(d)), d) : this;
    }, b.searchInRange = function(a, b) {
        var c, d = "", e = null;
        return a && b ? ("string" == typeof a && (c = a.charAt(0), c.indexOf("#") > -1 ? (d = a.substr(1, a.length), 
        e = b.getElementById(d)) : c.indexOf(".") > -1 ? (d = a.substr(1, a.length), e = b.getElementsByClassName(d)) : (d = a, 
        e = b.getElementsByTagName(d))), "number" == typeof e.length && (e = e && 1 === e.length ? e[0] : [].slice.call(e)), 
        e) : this;
    }, a.util = b;
}(window), function(a) {
    function b(a) {
        var b = util.search(a.options.trigger);
        b.addEventListener("click", function() {
            a.openByTrigger();
        });
    }
    function c(a, b) {
        var c;
        for (c in b) b.hasOwnProperty(c) && (a[c] = b[c]);
        return a;
    }
    function d(a, c) {
        var d = document.createElement("div"), e = null;
        a.options.className && (util.addClass(d, a.options.className), d.id = c.id, a.currentIndex = "#" + c.id, 
        null === a.options.trigger ? util.addClass(d, "show") : (util.addClass(d, "trigger"), 
        b(a))), d.innerHTML = c.innerHTML, a.options.closeButton && (e = document.createElement("button"), 
        e.id = c.id + "-button", e.addEventListener("click", function() {
            a.close();
        }), d.appendChild(e)), util.search("body").appendChild(d), a.options.keepInDom || c.remove();
    }
    function e(a) {
        var b = util.search(a.options.selector);
        util.addClass(b, "hidden"), "number" == typeof b.length && b ? util.each(b, function(b) {
            d(a, b);
        }) : d(a, b);
    }
    var f = 0, g = function() {
        var a = this, b = {
            closeOnEsc: !0,
            closeOnClick: !0,
            closeButton: !0,
            overlay: !0,
            width: 800,
            height: 600,
            selector: ".modal-source",
            trigger: null,
            className: "modal",
            currentIndex: "",
            animation: "fromLeft",
            animationInvert: "toTop",
            keepInDom: !1
        }, d = 0, g = arguments[d];
        a.options = g && "object" == typeof g ? c(b, arguments[f]) : b, e(a);
    };
    g.prototype.openByTrigger = function() {
        var a = this, b = util.search("body"), c = util.search(a.currentIndex);
        util.addClass(b, "noscroll"), a.options.animation && util.addClass(c, a.options.animation), 
        c.addEventListener("animationend", function() {
            util.removeClass(c, a.options.animation), util.removeClass(b, "noscroll"), console.log("Animation is ended");
        }), util.removeClass(c, "trigger"), util.addClass(c, "show");
    }, g.prototype.close = function() {
        var a = this, b = util.search(a.currentIndex), c = util.search("body");
        util.addClass(c, "noscroll"), a.options.animationInvert && (util.removeClass(b, a.options.animation), 
        util.addClass(b, a.options.animationInvert), b.addEventListener("animationend", function() {
            util.hasClass(b, a.options.animationInvert) && (util.removeClass(b, a.options.animationInvert), 
            util.removeClass(b, "show"), null !== a.options.trigger ? util.addClass(b, "trigger") : util.addClass(b, "hidden"), 
            util.removeClass(c, "noscroll"), console.log("Animation is ended"));
        }));
    }, a.Modal = g;
}(window);